{"version":3,"file":"component---src-pages-index-tsx-673715b9726ecb9f7bae.js","mappings":"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","sources":["webpack://mellow-portfolio/./src/components/copyright.tsx","webpack://mellow-portfolio/./src/sections/about.mdx","webpack://mellow-portfolio/./src/sections/links.tsx","webpack://mellow-portfolio/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport BtnSource from \"../components/btn-source\"\r\n\r\nconst Copyright = () => <div className=\"block-center\">\r\n    <p>© George Paton 2016 - {new Date().getFullYear()}</p>\r\n    <div style={{margin: 20}}>\r\n        <BtnSource style={{maxWidth: 400, margin: 'auto'}} href=\"https://github.com/MellowArpeggiation/MellowArpeggiation.github.io\">Source</BtnSource>\r\n    </div>\r\n</div>\r\n\r\nexport default Copyright\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`About`}</h2>\n    <p>{`An experienced developer with a taste for the functional and minimal, with 15+ years of experience in programming and design. Has an eye for details, and an awareness of the whole. Will unrelentingly refactor your code, and reason changes with great verbosity.`}</p>\n    <p>{`Currently working as the Director of Mellow Pty Ltd, we're making games!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","type Link = {\r\n    href: string,\r\n    title: string,\r\n    description: string,\r\n}\r\n\r\nconst Links: Link[] = [\r\n    {\r\n        href: 'https://mellowarpeggiation.itch.io',\r\n        title: 'itch.io',\r\n        description: 'Where I release all my games, and talk about games development',\r\n    },\r\n    {\r\n        href: 'http://rpg8.me/github',\r\n        title: 'GitHub',\r\n        description: 'My GitHub account, all the code I wish to share with the world is made available here',\r\n    },\r\n    {\r\n        href: 'http://rpg8.me/instagram',\r\n        title: 'Instagram',\r\n        description: 'Where I share weird art, fitness updates, and development videos',\r\n    },\r\n    {\r\n        href: 'http://rpg8.me/mastodon',\r\n        title: 'Mastodon',\r\n        description: 'I sometimes post here, and laugh at the demise of Twitter',\r\n    },\r\n    {\r\n        href: 'http://rpg8.me/soundcloud',\r\n        title: 'Soundcloud',\r\n        description: 'I make music, for games and for the love of it, have a listen here',\r\n    },\r\n    {\r\n        href: 'http://rpg8.me/linkedin',\r\n        title: 'LinkedIn',\r\n        description: 'Professional page, grab a copy of my resume here',\r\n    },\r\n]\r\n\r\nexport default Links\r\n","import * as React from \"react\"\r\nimport { Parallax, ParallaxLayer, IParallax } from '@react-spring/parallax'\r\nimport WordCloud from \"react-d3-cloud\"\r\n// @ts-ignore\r\nimport Anagram from 'react-anagram-animation'\r\n\r\n// @ts-ignore\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\nimport \"../styles/main.scss\"\r\nimport Header from \"../components/header\"\r\nimport Copyright from \"../components/copyright\"\r\n\r\n// @ts-ignore\r\nimport AboutMdx from \"../sections/about\"\r\nimport Projects from \"../sections/projects\"\r\nimport Skills from \"../sections/skills\"\r\nimport Links from \"../sections/links\"\r\n\r\n\r\n// markup\r\nconst IndexPage = () => {\r\n    const parallax = React.useRef<IParallax>(null!);\r\n    const isBrowser = typeof window !== 'undefined';\r\n    const isPortrait = isBrowser && window.innerHeight > window.innerWidth;\r\n\r\n    const [dimensions, setDimensions] = React.useState(getWordCloudDimensions(isPortrait));\r\n\r\n    // We can't really set page size dynamically, so we do a weird hack to force it, yeah it's messy and bad for performance,\r\n    // but the alternative is cutting off content or ending up with a massive dead area at the bottom of the page.\r\n    let resizeTimeout: any;\r\n    resizeTimeout = setTimeout(() => {\r\n        setParallaxHeight(parallax.current);\r\n        resizeTimeout = null;\r\n    }, 98);\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"resize\", () => {\r\n            const isPortrait = window.innerHeight > window.innerWidth;\r\n            setDimensions(getWordCloudDimensions(isPortrait));\r\n\r\n            if (resizeTimeout) clearTimeout(resizeTimeout);\r\n\r\n            resizeTimeout = setTimeout(() => {\r\n                setParallaxHeight(parallax.current);\r\n                resizeTimeout = null;\r\n            }, 98);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <main>\r\n            <title>Mᴇʟʟᴏᴡ Aʀᴘᴇɢɢɪᴀᴛɪᴏɴ</title>\r\n            <Parallax\r\n                ref={parallax}\r\n                pages={8}\r\n                className={'parallax-container'}\r\n                innerStyle={{ backgroundColor: 'black' }}\r\n            >\r\n\r\n                {/* Title area */}\r\n                <ParallaxLayer className=\"page\" speed={1}>\r\n                    <div className=\"load-spinner\"></div>\r\n                    <Header title=\"Mellow\" />\r\n                    <div className=\"scroll-indicator\"></div>\r\n                </ParallaxLayer>\r\n                <ParallaxLayer className=\"page\" offset={0.15} speed={1.1}>\r\n                    <div className=\"anagram-container\">\r\n                        <span className=\"text-small\">&lt;by&gt;</span>\r\n                        <Anagram\r\n                            words={['mellow arpeggiation', 'george william paton']}\r\n                            animationOptions={{\r\n                                randomStartMin: 0,\r\n                                randomStartMax: 1000,\r\n                                randomReverseMin: 6000,\r\n                                randomReverseMax: 7000,\r\n                                loopAnimation: 12000,\r\n                                waitToStart: 7000,\r\n                                transitionDuration: 1600,\r\n                                timingFunction: 'cubic-bezier(.5, 0, .2, 1.1)',\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </ParallaxLayer>\r\n\r\n                {/* About section */}\r\n                <ParallaxLayer className=\"background-title\" offset={0.99} speed={0.35}>\r\n                    <div className=\"up-down\" aria-hidden=\"true\">\r\n                        About\r\n                    </div>\r\n                </ParallaxLayer>\r\n                <ParallaxLayer offset={0.9} speed={0.3}>\r\n                    <div className=\"background-parallelogram\"></div>\r\n                </ParallaxLayer>\r\n                <ParallaxLayer className=\"page\" offset={0.99} speed={0.5}>\r\n                    <section>\r\n                        <AboutMdx />\r\n                    </section>\r\n                    <section>\r\n                        <h2>Links</h2>\r\n                        <ul>\r\n                            {Links.map((link, i) => {\r\n                                return <li key={i}><a href={link.href}>{link.title}</a>&nbsp;&nbsp;&nbsp;&ndash;&nbsp;&nbsp;&nbsp;{link.description}</li>\r\n                            })}\r\n                        </ul>\r\n                    </section>\r\n                </ParallaxLayer>\r\n\r\n                {/* Skills section */}\r\n                <ParallaxLayer className=\"background-title\" offset={1.5} speed={0.25}>\r\n                    <div className=\"up-down text-right\" aria-hidden=\"true\">\r\n                        Skills\r\n                    </div>\r\n                </ParallaxLayer>\r\n                <ParallaxLayer offset={1.4} speed={0.5}>\r\n                    <div className=\"background-parallelogram background-parallelogram-alt\"></div>\r\n                </ParallaxLayer>\r\n                <ParallaxLayer offset={1.6} speed={0.4}>\r\n                    <div style={{maxWidth: 1200, margin: 'auto'}}>\r\n                        <WordCloud\r\n                            data={Skills}\r\n                            width={dimensions[0]}\r\n                            height={dimensions[1]}\r\n                            font=\"Milletun\"\r\n                            fill={() => Math.random() > 0.5 ? 'cyan' : 'magenta'}\r\n                            padding={4}\r\n                            rotate={() => 0}\r\n                        />\r\n                    </div>\r\n                </ParallaxLayer>\r\n\r\n                {/* Project section */}\r\n                <ParallaxLayer offset={2.4}>\r\n                    <div className=\"background-hatch\"></div>\r\n                </ParallaxLayer>\r\n                <ParallaxLayer className=\"background-title\" offset={2.2} speed={0.25}>\r\n                    <div className=\"up-down\" aria-hidden=\"true\">\r\n                        Projects\r\n                    </div>\r\n                </ParallaxLayer>\r\n                <ParallaxLayer offset={2.4} speed={0.5}>\r\n                    <VerticalTimeline lineColor={'linear-gradient(180deg, transparent, cyan 64px, cyan 95%, transparent)'}>\r\n                        {Projects.map((project, i) => {\r\n                            return <VerticalTimelineElement\r\n                                key={i}\r\n                                contentStyle={{ background: '#111' }}\r\n                                contentArrowStyle={{ borderRight: '8px solid #111' }}\r\n                                date={project.date}\r\n                                iconStyle={{ background: 'cyan', boxShadow: 'none' }}\r\n                            >\r\n                                <project.content />\r\n                            </VerticalTimelineElement>\r\n                        })}\r\n                    </VerticalTimeline>\r\n                    <Copyright />\r\n                </ParallaxLayer>\r\n            </Parallax>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst getWordCloudDimensions = (isPortrait: boolean) => [isPortrait ? 350 : 500, isPortrait ? 500 : 300];\r\n\r\nconst setParallaxHeight = (parallax: IParallax) => {\r\n    if (!parallax) return;\r\n\r\n    const content = parallax.content.current;\r\n\r\n    // 2.4 is the current offset of the last parallax element\r\n    // 1280 is the breakpoint at which the root em size increases\r\n    // Everything else is a magic number based on the internal implementation of react-spring,\r\n    // so beware, here be dragons\r\n    const parallaxTopOffset = (2.4 + 0.2) * window.innerHeight;\r\n    const lastContainerHeight = content.lastChild.scrollHeight * 0.8;\r\n    const fixedOffset = window.innerWidth < 1280 ? -600 : -1000;\r\n\r\n    content.style.height = (parallaxTopOffset + lastContainerHeight + fixedOffset) + 'px';\r\n}\r\n\r\nexport default IndexPage\r\n"],"names":["React","className","Date","getFullYear","style","margin","BtnSource","maxWidth","href","layoutProps","_frontmatter","MDXContent","components","props","mdxType","isMDXComponent","title","description","getWordCloudDimensions","isPortrait","setParallaxHeight","parallax","content","current","parallaxTopOffset","window","innerHeight","lastContainerHeight","lastChild","scrollHeight","fixedOffset","innerWidth","height","resizeTimeout","dimensions","setDimensions","setTimeout","addEventListener","clearTimeout","Parallax","ref","pages","innerStyle","backgroundColor","ParallaxLayer","speed","Header","offset","Anagram","words","animationOptions","randomStartMin","randomStartMax","randomReverseMin","randomReverseMax","loopAnimation","waitToStart","transitionDuration","timingFunction","AboutMdx","Links","link","i","key","WordCloud","data","Skills","width","font","fill","Math","random","padding","rotate","VerticalTimeline","lineColor","Projects","project","VerticalTimelineElement","contentStyle","background","contentArrowStyle","borderRight","date","iconStyle","boxShadow","Copyright"],"sourceRoot":""}